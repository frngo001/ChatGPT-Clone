import{_ as f,F as u,K as B,e as C,l as w,b as S,a as D,q as T,t as z,g as F,s as P,G as E,H as A,z as W}from"./mermaid.core-CSOL9JHL.js";import{p as _}from"./chunk-4BX2VUAB-MqX6Aps4.js";import{p as N}from"./treemap-KMMF4GRG-BSGV1pzw.js";import"./index-Dh7oQLGv.js";import"./chat-layout-CTOOQ1Dz.js";import"./react-icons.esm-CljQgaNf.js";import"./tooltip-CNJFfZC9.js";import"./index-saGGflCH.js";import"./index-UyojpgVu.js";import"./index-CJ6jLVRY.js";import"./index-D872S1Wg.js";import"./index-DjfW-Tuq.js";import"./createLucideIcon-lxK-mJ-t.js";import"./badge-Dc2FE8J8.js";import"./download-h1m7IxI_.js";import"./dialog-DOpdcYnA.js";import"./index-D_YAIk5L.js";import"./ollama-chat-store-uT0Z94QS.js";import"./middleware-BFCXRDQO.js";import"./textarea-dMCY82KD.js";import"./dropdown-menu-Ung7NCvq.js";import"./index-CJP2zqOC.js";import"./index-MApn9K6N.js";import"./chevron-down-Di-RzDVR.js";import"./index-Bg13C8YO.js";import"./index-CBymCxH3.js";import"./alert-B2bGRIHi.js";import"./_baseUniq-qBvL5lVc.js";import"./_basePickBy-B-ZtGdhL.js";import"./clone-sHLZuQdc.js";var L=A.packet,b,v=(b=class{constructor(){this.packet=[],this.setAccTitle=S,this.getAccTitle=D,this.setDiagramTitle=T,this.getDiagramTitle=z,this.getAccDescription=F,this.setAccDescription=P}getConfig(){const t=u({...L,...E().packet});return t.showBits&&(t.paddingY+=10),t}getPacket(){return this.packet}pushWord(t){t.length>0&&this.packet.push(t)}clear(){W(),this.packet=[]}},f(b,"PacketDB"),b),M=1e4,Y=f((e,t)=>{_(e,t);let a=-1,o=[],n=1;const{bitsPerRow:l}=t.getConfig();for(let{start:r,end:s,bits:p,label:c}of e.blocks){if(r!==void 0&&s!==void 0&&s<r)throw new Error(`Packet block ${r} - ${s} is invalid. End must be greater than start.`);if(r??=a+1,r!==a+1)throw new Error(`Packet block ${r} - ${s??r} is not contiguous. It should start from ${a+1}.`);if(p===0)throw new Error(`Packet block ${r} is invalid. Cannot have a zero bit field.`);for(s??=r+(p??1)-1,p??=s-r+1,a=s,w.debug(`Packet block ${r} - ${a} with label ${c}`);o.length<=l+1&&t.getPacket().length<M;){const[d,i]=G({start:r,end:s,bits:p,label:c},n,l);if(o.push(d),d.end+1===n*l&&(t.pushWord(o),o=[],n++),!i)break;({start:r,end:s,bits:p,label:c}=i)}}t.pushWord(o)},"populate"),G=f((e,t,a)=>{if(e.start===void 0)throw new Error("start should have been set during first phase");if(e.end===void 0)throw new Error("end should have been set during first phase");if(e.start>e.end)throw new Error(`Block start ${e.start} is greater than block end ${e.end}.`);if(e.end+1<=t*a)return[e,void 0];const o=t*a-1,n=t*a;return[{start:e.start,end:o,label:e.label,bits:o-e.start},{start:n,end:e.end,label:e.label,bits:e.end-n}]},"getNextFittingBlock"),x={parser:{yy:void 0},parse:f(async e=>{const t=await N("packet",e),a=x.parser?.yy;if(!(a instanceof v))throw new Error("parser.parser?.yy was not a PacketDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");w.debug(t),Y(t,a)},"parse")},H=f((e,t,a,o)=>{const n=o.db,l=n.getConfig(),{rowHeight:r,paddingY:s,bitWidth:p,bitsPerRow:c}=l,d=n.getPacket(),i=n.getDiagramTitle(),g=r+s,m=g*(d.length+1)-(i?0:r),h=p*c+2,k=B(t);k.attr("viewbox",`0 0 ${h} ${m}`),C(k,m,h,l.useMaxWidth);for(const[y,$]of d.entries())I(k,$,y,l);k.append("text").text(i).attr("x",h/2).attr("y",m-g/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")},"draw"),I=f((e,t,a,{rowHeight:o,paddingX:n,paddingY:l,bitWidth:r,bitsPerRow:s,showBits:p})=>{const c=e.append("g"),d=a*(o+l)+l;for(const i of t){const g=i.start%s*r+1,m=(i.end-i.start+1)*r-n;if(c.append("rect").attr("x",g).attr("y",d).attr("width",m).attr("height",o).attr("class","packetBlock"),c.append("text").attr("x",g+m/2).attr("y",d+o/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(i.label),!p)continue;const h=i.end===i.start,k=d-2;c.append("text").attr("x",g+(h?m/2:0)).attr("y",k).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",h?"middle":"start").text(i.start),h||c.append("text").attr("x",g+m).attr("y",k).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(i.end)}},"drawWord"),K={draw:H},O={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"},j=f(({packet:e}={})=>{const t=u(O,e);return`
	.packetByte {
		font-size: ${t.byteFontSize};
	}
	.packetByte.start {
		fill: ${t.startByteColor};
	}
	.packetByte.end {
		fill: ${t.endByteColor};
	}
	.packetLabel {
		fill: ${t.labelColor};
		font-size: ${t.labelFontSize};
	}
	.packetTitle {
		fill: ${t.titleColor};
		font-size: ${t.titleFontSize};
	}
	.packetBlock {
		stroke: ${t.blockStrokeColor};
		stroke-width: ${t.blockStrokeWidth};
		fill: ${t.blockFillColor};
	}
	`},"styles"),yt={parser:x,get db(){return new v},renderer:K,styles:j};export{yt as diagram};
