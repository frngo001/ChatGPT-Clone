import{_ as o,l as p,K as e,e as m,L as s}from"./mermaid.core-WNqHpo9k.js";import{p as n}from"./treemap-KMMF4GRG-sBqGC-AD.js";import"./index-B_HhO1BD.js";import"./chat-layout-oLXXEvch.js";import"./react-icons.esm-XGy2brPy.js";import"./tooltip-pyuOrWSK.js";import"./index-DYm5icJq.js";import"./index-BFTPONSX.js";import"./index-51J0CxvN.js";import"./index-DiU1bmsz.js";import"./index-3cXNCA9N.js";import"./createLucideIcon-QzJBPPa0.js";import"./badge-Dxifg8Bp.js";import"./download-B_6KyjGe.js";import"./dialog-D8sxmf9z.js";import"./index-CtFV1-CA.js";import"./ollama-chat-store-TczXg8YY.js";import"./middleware-BFCXRDQO.js";import"./textarea-DmBfN8NY.js";import"./dropdown-menu-B8Y2P75d.js";import"./index-CWPVk02v.js";import"./index-C4ZU240X.js";import"./chevron-down-De59KNzJ.js";import"./index-s08v57dv.js";import"./index-wYSF3Yd0.js";import"./alert-CUNnGcOl.js";import"./_baseUniq-DAGI8ISF.js";import"./_basePickBy-9NAUXeQp.js";import"./clone-BXNa62JN.js";var g={parse:o(async r=>{const t=await n("info",r);p.debug(t)},"parse")},v={version:s.version+""},d=o(()=>v.version,"getVersion"),c={getVersion:d},l=o((r,t,a)=>{p.debug(`rendering info diagram
`+r);const i=e(t);m(i,100,400,!0),i.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${a}`)},"draw"),f={draw:l},M={parser:g,db:c,renderer:f};export{M as diagram};
