import{c as P}from"./createLucideIcon-BLFTGKfC.js";import{r as i,j as s,f as h,y as q}from"./index-DIMaQiqK.js";import{u as H,c as V,a as g,e as K}from"./index-CC1GEaG-.js";import{u as C}from"./index-CxwEreXY.js";import{P as U,h as X,a as Y,u as Z,F as z,D as J}from"./index-Bv23SKHG.js";import{P as R}from"./index-Dc0zGrEp.js";import{P as p}from"./index-BIXP3q5l.js";/**
 * @license lucide-react v0.542.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Q=[["path",{d:"m9 18 6-6-6-6",key:"mthhwq"}]],ve=P("chevron-right",Q);/**
 * @license lucide-react v0.542.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const ee=[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]],xe=P("x",ee);var m="Dialog",[N,Ce]=V(m),[te,u]=N(m),O=e=>{const{__scopeDialog:o,children:r,open:a,defaultOpen:n,onOpenChange:t,modal:l=!0}=e,c=i.useRef(null),f=i.useRef(null),[v,x]=H({prop:a,defaultProp:n??!1,onChange:t,caller:m});return s.jsx(te,{scope:o,triggerRef:c,contentRef:f,contentId:C(),titleId:C(),descriptionId:C(),open:v,onOpenChange:x,onOpenToggle:i.useCallback(()=>x(B=>!B),[x]),modal:l,children:r})};O.displayName=m;var I="DialogTrigger",b=i.forwardRef((e,o)=>{const{__scopeDialog:r,...a}=e,n=u(I,r),t=h(o,n.triggerRef);return s.jsx(p.button,{type:"button","aria-haspopup":"dialog","aria-expanded":n.open,"aria-controls":n.contentId,"data-state":E(n.open),...a,ref:t,onClick:g(e.onClick,n.onOpenToggle)})});b.displayName=I;var _="DialogPortal",[oe,A]=N(_,{forceMount:void 0}),T=e=>{const{__scopeDialog:o,forceMount:r,children:a,container:n}=e,t=u(_,o);return s.jsx(oe,{scope:o,forceMount:r,children:i.Children.map(a,l=>s.jsx(R,{present:r||t.open,children:s.jsx(U,{asChild:!0,container:n,children:l})}))})};T.displayName=_;var D="DialogOverlay",j=i.forwardRef((e,o)=>{const r=A(D,e.__scopeDialog),{forceMount:a=r.forceMount,...n}=e,t=u(D,e.__scopeDialog);return t.modal?s.jsx(R,{present:a||t.open,children:s.jsx(re,{...n,ref:o})}):null});j.displayName=D;var ne=q("DialogOverlay.RemoveScroll"),re=i.forwardRef((e,o)=>{const{__scopeDialog:r,...a}=e,n=u(D,r);return s.jsx(Y,{as:ne,allowPinchZoom:!0,shards:[n.contentRef],children:s.jsx(p.div,{"data-state":E(n.open),...a,ref:o,style:{pointerEvents:"auto",...a.style}})})}),d="DialogContent",M=i.forwardRef((e,o)=>{const r=A(d,e.__scopeDialog),{forceMount:a=r.forceMount,...n}=e,t=u(d,e.__scopeDialog);return s.jsx(R,{present:a||t.open,children:t.modal?s.jsx(ae,{...n,ref:o}):s.jsx(se,{...n,ref:o})})});M.displayName=d;var ae=i.forwardRef((e,o)=>{const r=u(d,e.__scopeDialog),a=i.useRef(null),n=h(o,r.contentRef,a);return i.useEffect(()=>{const t=a.current;if(t)return X(t)},[]),s.jsx(w,{...e,ref:n,trapFocus:r.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:g(e.onCloseAutoFocus,t=>{t.preventDefault(),r.triggerRef.current?.focus()}),onPointerDownOutside:g(e.onPointerDownOutside,t=>{const l=t.detail.originalEvent,c=l.button===0&&l.ctrlKey===!0;(l.button===2||c)&&t.preventDefault()}),onFocusOutside:g(e.onFocusOutside,t=>t.preventDefault())})}),se=i.forwardRef((e,o)=>{const r=u(d,e.__scopeDialog),a=i.useRef(!1),n=i.useRef(!1);return s.jsx(w,{...e,ref:o,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:t=>{e.onCloseAutoFocus?.(t),t.defaultPrevented||(a.current||r.triggerRef.current?.focus(),t.preventDefault()),a.current=!1,n.current=!1},onInteractOutside:t=>{e.onInteractOutside?.(t),t.defaultPrevented||(a.current=!0,t.detail.originalEvent.type==="pointerdown"&&(n.current=!0));const l=t.target;r.triggerRef.current?.contains(l)&&t.preventDefault(),t.detail.originalEvent.type==="focusin"&&n.current&&t.preventDefault()}})}),w=i.forwardRef((e,o)=>{const{__scopeDialog:r,trapFocus:a,onOpenAutoFocus:n,onCloseAutoFocus:t,...l}=e,c=u(d,r),f=i.useRef(null),v=h(o,f);return Z(),s.jsxs(s.Fragment,{children:[s.jsx(z,{asChild:!0,loop:!0,trapped:a,onMountAutoFocus:n,onUnmountAutoFocus:t,children:s.jsx(J,{role:"dialog",id:c.contentId,"aria-describedby":c.descriptionId,"aria-labelledby":c.titleId,"data-state":E(c.open),...l,ref:v,onDismiss:()=>c.onOpenChange(!1)})}),s.jsxs(s.Fragment,{children:[s.jsx(ie,{titleId:c.titleId}),s.jsx(le,{contentRef:f,descriptionId:c.descriptionId})]})]})}),y="DialogTitle",F=i.forwardRef((e,o)=>{const{__scopeDialog:r,...a}=e,n=u(y,r);return s.jsx(p.h2,{id:n.titleId,...a,ref:o})});F.displayName=y;var S="DialogDescription",W=i.forwardRef((e,o)=>{const{__scopeDialog:r,...a}=e,n=u(S,r);return s.jsx(p.p,{id:n.descriptionId,...a,ref:o})});W.displayName=S;var k="DialogClose",L=i.forwardRef((e,o)=>{const{__scopeDialog:r,...a}=e,n=u(k,r);return s.jsx(p.button,{type:"button",...a,ref:o,onClick:g(e.onClick,()=>n.onOpenChange(!1))})});L.displayName=k;function E(e){return e?"open":"closed"}var G="DialogTitleWarning",[he,$]=K(G,{contentName:d,titleName:y,docsSlug:"dialog"}),ie=({titleId:e})=>{const o=$(G),r=`\`${o.contentName}\` requires a \`${o.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${o.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${o.docsSlug}`;return i.useEffect(()=>{e&&(document.getElementById(e)||console.error(r))},[r,e]),null},ce="DialogDescriptionWarning",le=({contentRef:e,descriptionId:o})=>{const a=`Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${$(ce).contentName}}.`;return i.useEffect(()=>{const n=e.current?.getAttribute("aria-describedby");o&&n&&(document.getElementById(o)||console.warn(a))},[a,e,o]),null},Re=O,_e=b,ye=T,Ee=j,Pe=M,Ne=F,Oe=W,Ie=L;export{ve as C,Oe as D,Ee as O,ye as P,Re as R,_e as T,he as W,xe as X,Pe as a,Ie as b,Ne as c,Ce as d};
